[gd_scene load_steps=5 format=3 uid="uid://b345ltemkrjd4"]

[sub_resource type="BoxShape3D" id="BoxShape3D_d3gh8"]

[sub_resource type="BoxMesh" id="BoxMesh_2bugp"]

[sub_resource type="Shader" id="Shader_s8coy"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.1.1.stable.mono's ORMMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform sampler2D texture_orm : hint_roughness_g,filter_linear_mipmap,repeat_enable;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}






void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	vec4 orm_tex = texture(texture_orm,base_uv);
	ROUGHNESS = orm_tex.g;
	METALLIC = orm_tex.b;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_gatu6"]
render_priority = 0
shader = SubResource("Shader_s8coy")
shader_parameter/albedo = Color(0.545098, 1, 1, 1)
shader_parameter/point_size = 1.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)

[node name="Cube" type="Node3D"]

[node name="RigidBody3D" type="RigidBody3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 8.6391, 0)

[node name="CollisionShape3D" type="CollisionShape3D" parent="RigidBody3D"]
shape = SubResource("BoxShape3D_d3gh8")

[node name="MeshInstance3D" type="MeshInstance3D" parent="RigidBody3D"]
mesh = SubResource("BoxMesh_2bugp")
surface_material_override/0 = SubResource("ShaderMaterial_gatu6")
